;; Home row mods QWERTY example with more complexity.
;; Some of the changes from the basic example:
;; - when a home row mod activates tap, the home row mods are disabled
;;   while continuing to type rapidly
;; - tap-hold-release helps make the hold action more responsive
;; - pressing another key on the same half of the keyboard
;;   as the home row mod will activate an early tap action

(defcfg
  process-unmapped-keys yes
)

(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

(deflayer base
  grv 1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  ;; @escctrl a   s   d   f    g    h    j   k   l   ;     _     ret
  ;; @escctrl @a   @s   @d   @f    g    h    @j   @k   @l   @;     _     ret
  @escctrl a   s   d   @f    g    h    @j   k   l   ;     _     XX ;; shift on power finger
  lsft  z    x    c    v    b    n    m    ,    .    /    XX
  lctl @lalt lmet            @spc            ralt rmet rctl
)

(deflayer nomods
  grv 1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q   w    e    r    t    y    u    i    o    p    [    ]    \
  caps a   s    d    f    g    h    j    k    l    ;    _    ret
  lsft z    x    c    v    b    n    m    ,    .    /    spc
  lctl lalt lmet            spc            ralt rmet rctl
)

(deflayer symbole
  grv 1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab q    w    e    r    t    @lsb    @lp    @rp  o    p    [    ]    \
  @escctrl a    s    d    ret  g    @rsb    @lb    @rb   l   @vimCmd   @dq   XX
  lsft z   x    c    v    b    n    m    ,    .    /    XX
  lctl @lalt lmet            spc            ralt rmet rctl
)

(defvar
  ;; Note: consider using different time values for your different fingers.
  ;; For example, your pinkies might be slower to release keys and index
  ;; fingers faster.
  tap-time 150
  hold-time 150

  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
  all-keys (
    q w e r t y u i o p
    a s d f g h j k l ;
    z x c v b n m , . /
  )
)
;;(deflayer base
  ;;@a  @s  @d  @f  @j  @k  @l  @;
;;)

;;(deflayer nomods
  ;;a   s   d   f   j   k   l   ;
;;)
(deffakekeys
  to-base (layer-switch base)
)
(defalias
  lp (unicode "(")
  rp (unicode ")")
  lsb (unicode "[")
  rsb (unicode "]")
  lb (unicode "{")
  rb (unicode "}")
  dq (unicode r#"""#)
  vimCmd (unicode ":")
  escctrl (tap-hold 100 100 esc lctl)

  tap (multi
    (layer-switch base)
    (on-idle-fakekey to-base tap 20)
  )

  a (tap-hold-release-keys $tap-time $hold-time (multi a @tap) lmet $left-hand-keys)
  s (tap-hold-release-keys $tap-time $hold-time (multi s @tap) lalt $left-hand-keys)
  d (tap-hold-release-keys $tap-time $hold-time (multi d @tap) lctl $left-hand-keys)
  f (tap-hold-release-keys $tap-time $hold-time (multi f @tap) lsft $left-hand-keys)
  j (tap-hold-release-keys $tap-time $hold-time (multi j @tap) rsft $right-hand-keys)
  k (tap-hold-release-keys $tap-time $hold-time (multi k @tap) rctl $right-hand-keys)
  l (tap-hold-release-keys $tap-time $hold-time (multi l @tap) lalt $right-hand-keys)
  ; (tap-hold-release-keys $tap-time $hold-time (multi ; @tap) rmet $right-hand-keys)
  symbole (layer-while-held symbole)
  spc (tap-hold-release-keys $tap-time $hold-time spc (layer-while-held symbole ) $all-keys)
  lalt (tap-hold $tap-time $hold-time ret lalt )
)
